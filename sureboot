#!/usr/bin/python3

import os
import os.path
import subprocess


def cmd(cmd):
	print('$ %s' % cmd)
	os.system(cmd)
#enddef


def main():
	with open('/etc/fstab', 'r') as f:
		for line in f:
			if '/boot' in line and not line.startswith('#'):
				print('/boot partition is in fstab')
				return
			#endif
		#endfor
	#endwith

	if not os.path.isfile('/etc/systemd/system/boot.mount'):
		print('/etc/systemd/system/boot.mount does not exist')
		return
	#endif

	# TODO: actually verify where does the link point to
	if not os.path.islink('/etc/systemd/system/local-fs.target.wants/boot.mount'):
		print('/etc/systemd/system/local-fs.target.wants/boot.mount link does not exist')
		return
	#endif

	# TODO: this may be simpler but does not check the fs type
	#if not os.path.ismount('/boot'):

	boot_part = None
	with open('/proc/self/mounts', 'r') as f:
		for line in f:
			if '/boot' in line and 'vfat' in line:
				boot_part = line.split()[0]
				break
			#endif
		else:
			print('/boot partition not mounted')
			return
		#endfor
	#endwith

	boot_parts = subprocess.check_output('blkid -o device -t LABEL=BOOT', shell=True).decode().strip().split('\n')

	if not boot_parts:
		print('no backup BOOT partitions!')
		return
	#endif

	mbr_devs = []
	for dev in os.listdir('/sys/class/block'):
		if not os.path.isfile('/sys/class/block/%s/removable' % dev): continue
		if not open('/sys/class/block/%s/removable' % dev).read() != '0': continue
		mbr_devs.append(dev)
	#endfor

	if not mbr_devs:
		print('no devices to install mbr to')
		return
	#endif

	cmd('mkdir /tmp/sureboot')

	for part in boot_parts:
		if part == boot_part: continue

		cmd('mount %s /tmp/sureboot' % part)
		cmd('rm -rf /tmp/sureboot/*')
		cmd('cp -av /boot/* /tmp/sureboot/')
		cmd('extlinux --install -r /tmp/sureboot')
		cmd('umount /tmp/sureboot')
	#endfor

	cmd('rmdir /tmp/sureboot')

	for dev in mbr_devs:
		cmd('dd if=/usr/lib/syslinux/bios/mbr.bin of=/dev/%s bs=440 count=1 conv=notrunc' % dev)
	#endfor

	cmd('sync')
#enddef


if __name__ == '__main__': main()
