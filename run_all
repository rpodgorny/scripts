#!/usr/bin/python3

'''
Run command on multiple hosts.

Usage:
  run_all [-t <tag>] [--user=<user>] [--pass=<pass>] <command>
  run_all [-t <tag>] [--user=<user>] [--pass=<pass>] --script <script>
  run_all [-t <tag>] [--user=<user>] [--pass=<pass>] --copy-keys

Options:
  -t <tag>       Only consider hosts with <tag>.
  --user=<user>  Username to use for the remote host.
  --pass=<pass>  Password to use for sshpass.
  --copy-keys    Copy local ssh keys to remote servers.

Arguments:
  <command>  Command to run.
'''

__version__ = '0.1'

import sys
import subprocess
import docopt
import os
import pwd
import socket


HOSTS = [
	'admiral.podgorny.cz arch linux podgorny',
	'berta.podgorny.cz arch arm linux podgorny',
	'chuck.podgorny.cz arch linux podgorny',
	'europa.podgorny.cz arch arm linux podgorny router',
	'hubert.asterix.cz arch asterix linux',
	'kulicka.podgorny.cz arch arm linux podgorny',
	'milan.podgorny.cz arch arm linux podgorny',
	'milhouse.podgorny.cz arch linux podgorny sureboot',
	'mrtvola.asterix.cz arch asterix linux',
	'orion.asterix.cz arch asterix linux sureboot',
	'pimiento.podgorny.cz arch linux podgorny',
	'kapitan.podgorny.cz gentoo linux podgorny',
	'pokuston.podgorny.cz arch arm linux podgorny',
	'rpodgorny.podgorny.cz arch linux podgorny',
	'simir.podgorny.cz arch linux podgorny',
	'taurus.asterix.cz arch asterix linux router',
	'ucho.podgorny.cz arch arm linux podgorny',
]

#for i in range(1, 13):
#	HOSTS.append('miner%d.asterix.cz arch asterix linux miner' % i)
#endfor

for i in range(1, 200):
	HOSTS.append('mj%d.asterix.cz asterix atx300 windows' % i)
#endfor

for i in range(1, 2000):
	HOSTS.append('mj%dd.asterix.cz asterix windows' % i)
#endfor


PUB_KEY_FN = os.path.expanduser('~/.ssh/id_ecdsa.pub')


class color:
	PURPLE = '\033[95m'
	CYAN = '\033[96m'
	DARKCYAN = '\033[36m'
	BLUE = '\033[94m'
	GREEN = '\033[92m'
	YELLOW = '\033[93m'
	RED = '\033[91m'
	BOLD = '\033[1m'
	UNDERLINE = '\033[4m'
	END = '\033[0m'
#endclass


def check_pub_key(fn):
	with open(fn, 'r') as f:
		line = f.readline()
	#endwith

	user_and_host = line.split()[-1]
	user, host = user_and_host.split('@')

	if user != pwd.getpwuid(os.getuid())[0]: return False
	if host != socket.gethostname(): return False

	return True
#enddef


def filter_hosts(hosts):
	ret = set()

	for host in hosts:
		sys.stdout.write('.')
		sys.stdout.flush()

		try:
			socket.getaddrinfo(host, None)
			ret.add(host)
		except socket.gaierror:
			pass
		#endtry
	#endfor

	return ret
#enddef


def main():
	args = docopt.docopt(__doc__, version=__version__)

	tag = args['-t']

	selected_hosts = set()
	for i in HOSTS:
		host, *tags = i.split()
		if not tag or tag in tags:
			selected_hosts.add(host)
		#endif
	#endfor

	hosts = filter_hosts(selected_hosts)

	ok, err = set(), set()

	for host in sorted(list(hosts)):
		if args['--user']:
			host_full = '%s@%s' % (args['--user'], host)
		else:
			host_full = host
		#endif

		if args['--copy-keys']:
			if not check_pub_key(PUB_KEY_FN):
				raise Exception('i don\'t like the public key')
			#endif

			cmd = 'ssh-copy-id -i %s %s' % (PUB_KEY_FN, host)
		elif args['<script>']:
			cmd = 'ssh -o ConnectTimeout=2 %s "a=`mktemp`; cat >\$a; chmod a+x \$a; \$a; rm \$a" <%s' % (host_full, args['<script>'])
		elif args['<command>']:
			# the -t seems to be breaking logins to windows machines
			#cmd = 'ssh -o ConnectTimeout=2 -t %s "%s"' % (host_full, args['<command>'])

			cmd = 'ssh -o ConnectTimeout=2 %s "%s"' % (host_full, args['<command>'])
		#endif

		if args['--pass']:
			if not os.path.isfile('/usr/bin/sshpass'):
				raise Exception('/usr/bin/sshpass does not exist')
			#endif

			cmd = '/usr/bin/sshpass -p%s %s' % (args['--pass'], cmd)
		#endif

		print('%s%s%s%s' % (color.BOLD, color.YELLOW, cmd, color.END))
		res = subprocess.call(cmd, shell=True)

		if res == 0:
			ok.add(host)
		else:
			err.add(host)
		#endif
	#endfor

	print('ok: %d, err: %d' % (len(ok), len(err)))
#enddef


if __name__ == '__main__':
	main()
#enddef
