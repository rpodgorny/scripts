#!/usr/bin/python3

'''
Run command on multiple hosts.

Usage:
  run_all [-t <tag>] [--user=<user>] [--pass=<pass>] <command>
  run_all [-t <tag>] [--user=<user>] [--pass=<pass>] --copy-keys

Options:
  -t <tag>       Only consider hosts with <tag>.
  --user=<user>  Username to use for the remote host.
  --pass=<pass>  Password to use for sshpass.
  --copy-keys    Copy local ssh keys to remote servers.

Arguments:
  <command>  Command to run.
'''

__version__ = '0.1'

import subprocess
import docopt
import os
import pwd
import socket


hosts = [
	'admiral.podgorny.cz arch podgorny',
	'berta.podgorny.cz arch arm podgorny',
	'chuck.podgorny.cz arch podgorny',
	'europa.podgorny.cz arch arm podgorny router',
	'hubert.asterix.cz arch asterix',
	'kulicka.podgorny.cz arch arm podgorny',
	'milan.podgorny.cz arch arm podgorny',
	'milhouse.podgorny.cz arch podgorny sureboot',
	'mrtvola.asterix.cz arch asterix',
	'orion.asterix.cz arch asterix sureboot',
	'pimiento.podgorny.cz arch podgorny',
	'kapitan.podgorny.cz gentoo podgorny',
	'pokuston.podgorny.cz arch arm podgorny',
	'rpodgorny.podgorny.cz arch podgorny',
	'simir.podgorny.cz arch podgorny',
	'taurus.asterix.cz arch asterix router',
	'ucho.podgorny.cz arch arm podgorny',
]

#for i in range(1, 13):
#	hosts.append('miner%d.asterix.cz arch asterix miner' % i)
#endfor

for i in range(1, 200):
	hosts.append('mj%d.asterix.cz asterix atx300 windows' % i)
#endfor


PUB_KEY_FN = os.path.expanduser('~/.ssh/id_ecdsa.pub')


class color:
	PURPLE = '\033[95m'
	CYAN = '\033[96m'
	DARKCYAN = '\033[36m'
	BLUE = '\033[94m'
	GREEN = '\033[92m'
	YELLOW = '\033[93m'
	RED = '\033[91m'
	BOLD = '\033[1m'
	UNDERLINE = '\033[4m'
	END = '\033[0m'
#endclass


def check_pub_key(fn):
	with open(fn, 'r') as f:
		line = f.readline()
	#endwith

	user_and_host = line.split()[-1]
	user, host = user_and_host.split('@')

	if user != pwd.getpwuid(os.getuid())[0]: return False
	if host != socket.gethostname(): return False

	return True
#enddef


def main():
	args = docopt.docopt(__doc__, version=__version__)

	tag = args['-t']

	selected_hosts = set()
	for i in hosts:
		host, *tags = i.split()
		if not tag or tag in tags:
			selected_hosts.add(host)
		#endif
	#endfor

	for host in sorted(list(selected_hosts)):
		if args['--user']:
			host = '%s@%s' % (args['--user'], host)
		#endif

		if args['--copy-keys']:
			if not check_pub_key(PUB_KEY_FN):
				raise Exception('i don\'t like the public key')
			#endif

			cmd = 'ssh-copy-id -i %s %s' % (PUB_KEY_FN, host)
		else:
			#cmd = 'ssh -o ConnectTimeout=2 -t %s "%s"' % (host, args['<command>'])
			cmd = 'ssh -o ConnectTimeout=2 %s "%s"' % (host, args['<command>'])
		#endif

		if args['--pass']:
			if not os.path.isfile('/usr/bin/sshpass'):
				raise Exception('/usr/bin/sshpass does not exist')
			#endif

			cmd = '/usr/bin/sshpass -p%s %s' % (args['--pass'], cmd)
		#endif

		print('%s%s%s%s' % (color.BOLD, color.YELLOW, cmd, color.END))
		subprocess.call(cmd, shell=True)
	#endfor
#enddef


if __name__ == '__main__':
	main()
#enddef
