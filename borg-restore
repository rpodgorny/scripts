#!/usr/bin/python3

'''
borg-restore.

Usage:
  borg-restore [options] <device> <hostname>

Options:
  --fs=<fs>         Filesystem to use.
  --swap            Create swap.
  --archive=<name>  Manually specify archive.
'''

__version__ = '0.0'

import docopt
import subprocess
import os
import time


def run(cmd):
	print('>>> %s' % cmd)
	return subprocess.check_output(cmd, shell=True).decode()


def main():
	assert os.path.isfile('/usr/bin/arch-chroot')
	assert os.path.isfile('/usr/lib/syslinux/bios/mbr.bin')

	args = docopt.docopt(__doc__, version=__version__)

	dev = args['<device>']
	hostname = args['<hostname>']
	fs = args['--fs']

	while not fs in ('btrfs', 'ext4'):
		fs = input('fs: ')

	remote = 'backup@milhouse.podgorny.cz'
	repo = '%s:borg/%s' % (remote, hostname)

	archives_raw = run('borg list %s' % repo)
	archives = [i.strip().split()[0] for i in archives_raw.split('\n') if i]
	archives = list(reversed(sorted(archives)))

	n = None
	for i, archive in enumerate(archives):
		print('%s: %s' % (i, archive))
		if archive == args['--archive']:
			n = i
	if n is None:
		n = input('select archive [0]: ')
		n = int(n) if n else 0
	archive = archives[n]

	run('dd if=/dev/zero of=%s bs=2048 count=1' % dev)
	run('partprobe')

	dev_boot = '%s1' % dev
	if args['--swap']:
		dev_swap = '%s2' % dev
		dev_root = '%s3' % dev
		run('parted --script -a optimal %s -- mklabel msdos mkpart primary fat32 0%% 100MB mkpart primary swap 100MB 1000MB mkpart primary ext2 100MB 100%%' % dev)
	else:
		dev_swap = None
		dev_root = '%s2' % dev
		run('parted --script -a optimal %s -- mklabel msdos mkpart primary fat32 0%% 100MB mkpart primary ext2 100MB 100%%' % dev)
	run('partprobe')

	if dev_boot:
		assert(os.path.exists(dev_boot))
		run('mkfs.vfat -n BOOT %s' % dev_boot)
	if dev_swap:
		assert(os.path.exists(dev_swap))
		run('mkswap -L SWAP %s' % dev_swap)

	run('rm -rf /tmp/borg_restore')
	run('mkdir -p /tmp/borg_restore')
	if fs == 'btrfs':
		run('mkfs.btrfs -f -L ROOT %s' % dev_root)
		run('mount %s -o compress=lzo /tmp/borg_restore' % dev_root)
	elif fs == 'ext4':
		run('mkfs.ext4 -L ROOT %s' % dev_root)
		run('mount %s /tmp/borg_restore' % dev_root)
	else:
		raise('what?')

	run('mkdir /tmp/borg_restore/boot')
	run('mount %s1 /tmp/borg_restore/boot' % dev)

	cwd = os.getcwd()
	os.chdir('/tmp/borg_restore')

	run('mkdir dev proc run sys tmp')
	run('borg extract %s::%s' % (repo, archive))
	#run('echo "/usr/bin/extlinux --install /boot" | arch-chroot .')

	os.chdir(cwd)

	run('umount -R /tmp/borg_restore')
	run('dd if=/usr/lib/syslinux/bios/mbr.bin of=%s' % dev)
	run('sync')


if __name__ == '__main__':
	main()

