#!/bin/sh
set -e -x

which figlet >/dev/null
which cowsay >/dev/null
which parted >/dev/null
which partprobe >/dev/null
which mkarchiso >/dev/null
which extlinux >/dev/null
which dd >/dev/null

# unfinished
#echo "in ram? (y/n)"
#read INRAM
INRAM=n

DEV=$1

if [ "${INRAM}" = "y" ]; then
  DIR=/tmp/archlive
else
  DIR=/var/tmp/archlive
fi

MNT=/tmp/archlive_mnt
# FUCK! BE CAREFUL HERE if you want to change this - fat label can't be over 11 characters (see mkfs below)
ID=`date +"%Y%m%d%H%M%S"`
#ID=`date +%s`
HOSTNAME="arch-${ID}"
DATA_PREFIX=/home/radek/scripts

test "$DEV"
test -b $DEV
grep 1 /sys/block/`basename $DEV`/removable
###umount /var/tmp/archlive/work/efiboot || true
umount ${DIR}/work/efiboot || true

rm -rf $DIR
mkdir -p $DIR
rmdir $MNT || true
mkdir -p $MNT

cp -r /usr/share/archiso/configs/releng/* $DIR

#sed -i 's/\uefi-x64.grub/uefi-x64.systemd-boot/g' ${DIR}/profiledef.sh

echo '
[rpodgorny]
SigLevel = Never
Server = http://archlinux.podgorny.cz/$repo/os/$arch
' >> $DIR/pacman.conf

if [ "${INRAM}" = "y" ]; then
  echo '
CacheDir = /tmp/pacman_cache
  ' >> $DIR/pacman.conf
fi

# "pv" to show progress when loading image to ram - does not work!
# fuse-overlayfs so that podman works
echo '
acpi
archiso
beep
borg
cpupower
dd_rescue
docker
docker-compose
dosfstools
dstat
faddnsc-git
fish
fuse-overlayfs
fzf
git
gum
htop
lm_sensors
mercurial
mfs_utils
moosefs
ncdu
networkmanager
ntfs-3g
openssh
pmount
podman
pv
rsync
smartmontools
sshfs
sudo
tmux
uptimed
vim
zramswap
zstd
' >> $DIR/packages.x86_64
#' >> $DIR/packages.both

echo '
cpuminer-git
mprime
rowhammer-test-git
xmrig-donateless
' >> $DIR/packages.x86_64

echo '
systemctl enable NetworkManager
systemctl enable sshd
systemctl enable systemd-timesyncd
systemctl enable zramswap

cd /root
git clone https://github.com/rpodgorny/dotfiles
git clone https://github.com/rpodgorny/scripts
cd -
cd /root/dotfiles
./install
cd -

echo "root:aaa" | chpasswd

chsh -s /usr/bin/fish

chmod go-rwx /root/.ssh/id_rsa*

sed -e "s/^#Audit=/Audit=/g" -i /etc/systemd/journald.conf
sed -e "s/^Audit=yes/Audit=no/g" -i /etc/systemd/journald.conf
' >> $DIR/airootfs/root/customize_airootfs.sh

echo ${HOSTNAME} >$DIR/airootfs/etc/hostname

echo "192.168.11.11 mfsmaster" >$DIR/airootfs/etc/hosts

mkdir $DIR/airootfs/root/.ssh

echo '
-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAxG2Oyl+3nSsEEhjtTZkTrIpDEgCCR55JcU6Cik3/aac6m5a+
fz30YeUgp5ExuuyfpAXHYu+EGFlNVNE0TpfaRClsUw6wMuXOthxyoaNbHGZGCNKK
+kvbLCgPFpM7/453vAafqZNMTX/YP8uD1vdS3OJEmRSZtXYvJoKNdSWzA1xoXIGN
GVVYaFQ6f3MfPXHQddoonMkTq2vH0K4Yhz/52sDs2KOfKs6ijwAr+xzhrmDEzC8O
JCFxXwUzT3KKAUtgJU/LZz1M8/GnpJ17b4FzfLb7CFwzUYJDpfFt6ZuKg8/NuQEb
6/u+O2rEI+lI5mmGlg+6yaGQiMNmlvdeE9gIEwIDAQABAoIBACdHRSNgqoXKIUFB
LMq0joOVDj5eTa7mjwcSTPY9DJLi9sxAA43MJL8iozn+xbP8NxwEb89v17lKujT4
tH32zZWNtvSQ3lj/LSurWpzJ3qE6Lkz7VQEiBAy7YfEAtiGvKnA13t147+wbYXG4
T3+/6xjyQgdeYDIyFNGdj43aYQaNrTq1+5sNPRaksmzn0f5FzlTSDnJgeYSa1OtG
4G5r9CsZGWHhgHiBhLyGgGgV3M4YemAy911lNyHBzRI7RStHwa77RpXiXY8aHGSx
sOn+SyeH3cma+oexgVoXi/fQLCB0+ZgiaVaISnQJL0VM7Cb9juFM0ns2sUJrO9r6
rQ53EbECgYEA5AuU4JSay4JsqINPQVUTLiONH7OCjxmIsKAOfPZe/hsmZK+gmidk
3fEDH+0+lfiOE9YzVgO2XkYz2fxdaXkXNXF8iwj53beN0PjOtKq7kvFb8D7rqySN
OrD4lCncWDeM5+WjHm3JGKseQkA5SfcqPlERDly3fHP8MBzwIkoVqWsCgYEA3IHG
tk35+ewt6anlGreEie4eypZuWc6m8/yRZGoEY1HLedx/T5iUOzrdmQr905zfNCQ7
/xGoihoRvPMzTNNaxIq+sKZJxkrLG6G+7Avz5ch1kFXRu6zPWhx5DfUwynqnYeMm
o8CfW055fUoQbdByaB0Scl49lE27MZbAz5VnffkCgYBuEzEPnmuBpDjytj9BV+Fk
OgDatnlkvXx/VSLpKrr7iPtlSmkJP86uWrGZbZjyJwHdjV1GPZB/vP82T1x/ltWf
FGJ7ch+55+nqXs7X4jmcWih4tMZo28HX/KhgTDxx0I6ROQUdoPyaja6TaBC/JTEc
12CWQCbJSesHBlDbHEuMdQKBgQCUVtmPGrXn43KflqOBbaPEBmTAdKKX1+WIjYhh
vNBm4Ee6GxOqQEK39cnNgw9upEGjmhyiYwa2oQL90b3ZGPYe8heGTteihf5NAGqn
8QKKumgcSR9m2cJEJJNrSF8iV5Dy0RTVZGfPzOL93i1fMrNERwp51dwnQIOFwJzF
CQUuQQKBgBJD2m+42OtuPGFR2STnPnFW3oMcCztE2X3PmYUHJa4RiNjrcZMno7Wx
nWzfn2xBKv/NxJ9tUrmMSmKBD2kdG/XfbcsD5e5ck3RkRoCsAZbDFRauHtW6CCBq
nPHMrpyQ/cOK/0d5t0RgVomyVjclhmx0xldIjAFIYN82mhsI0JUU
-----END RSA PRIVATE KEY-----
' >> $DIR/airootfs/root/.ssh/id_rsa
chmod g-rwx $DIR/airootfs/root/.ssh/id_rsa
chmod o-rwx $DIR/airootfs/root/.ssh/id_rsa

echo '
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDEbY7KX7edKwQSGO1NmROsikMSAIJHnklxToKKTf9ppzqblr5/PfRh5SCnkTG67J+kBcdi74QYWU1U0TROl9pEKWxTDrAy5c62HHKho1scZkYI0or6S9ssKA8Wkzv/jne8Bp+pk0xNf9g/y4PW91Lc4kSZFJm1di8mgo11JbMDXGhcgY0ZVVhoVDp/cx89cdB12iicyROra8fQrhiHP/nawOzYo58qzqKPACv7HOGuYMTMLw4kIXFfBTNPcooBS2AlT8tnPUzz8aeknXtvgXN8tvsIXDNRgkOl8W3pm4qDz825ARvr+747asQj6UjmaYaWD7rJoZCIw2aW914T2AgT root@sysresccd
' >> $DIR/airootfs/root/.ssh/id_rsa.pub

echo '
orion.asterix.cz,2002:57ec:c733:8800:d63d:7eff:fe9a:da94 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBK4eKU7pIJ4opaOAtqb4vJXa9GIq8EMRyynypNk5WTMxYxY1tlBhlx20bjkD+0MEqYbds5Cf3+p3zYkBb0B4HNU=
' >> $DIR/airootfs/root/.ssh/known_hosts

echo '
tools@orion.asterix.cz: /tools fuse.sshfs x-systemd.automount,_netdev 0 0
' >> $DIR/airootfs/etc/fstab

figlet "Asterix" > ${DIR}/airootfs/etc/motd
echo "Universal Rescue" >> ${DIR}/airootfs/etc/motd
DATE=`date +"%Y-%m-%d %H:%M:%S"`
echo "I was born ${DATE}. Mooooo." | cowsay >> ${DIR}/airootfs/etc/motd

cd $DIR
###./build.sh -v -L ARCHISO_ATX
###mkarchiso -v -L ARCHISO_ATX /usr/share/archiso/configs/releng/
mkarchiso -v -L ARCHISO_ATX .
cd -

#dd_rescue $DIR/out/*iso $DEV

dd if=/dev/zero of=${DEV} bs=10M count=1
parted --script -a optimal ${DEV} -- mklabel msdos mkpart primary fat32 0% 100% set 1 boot on
mkfs.vfat -n ARCHISO_ATX ${DEV}1
mount ${DEV}1 ${MNT}
#bsdtar -x --exclude=isolinux/ --exclude=EFI/archiso/ --exclude=arch/boot/syslinux/ -f ${DIR}/out/*iso -C ${MNT}
bsdtar -x --exclude=isolinux/ -f ${DIR}/out/*iso -C ${MNT}
extlinux -i ${MNT}/boot/syslinux
umount ${MNT}
dd bs=440 count=1 conv=notrunc if=/usr/lib/syslinux/bios/mbr.bin of=${DEV}

sync
partprobe

mount ${DEV}1 $MNT

#cp ${MNT}/loader/entries/archiso-x86_64-linux.conf ${MNT}/loader/entries/archiso-x86_64-linux_copytoram.conf
#sed -i 's/\(title.*\)/\1 in RAM/g' ${MNT}/loader/entries/archiso-x86_64-linux_copytoram.conf
#sed -i 's/\(options.*\)/\1 copytoram/g' ${MNT}/loader/entries/archiso-x86_64-linux_copytoram.conf

##sed -i 's/\(options.*\)/\1 cow_spacesize=2G/g' ${MNT}/loader/entries/01-archiso-x86_64-linux.conf
##sed -i 's/\(options.*\)/\1 cow_spacesize=2G/g' ${MNT}/loader/entries/03-archiso-x86_64-ram-linux.conf

##sed -i 's/timeout.*/timeout 20/g' ${MNT}/loader/loader.conf
##sed -i 's/default 01-archiso-x86_64-linux/default 03-archiso-x86_64-ram-linux/g' ${MNT}/loader/loader.conf

###echo '
###console-mode 0
###timeout 20
###default archiso-x86_64-linux_copytoram
###editor no
###' >>${MNT}/loader/loader.conf

echo "menuentry \"Arch Linux install medium (x86_64, UEFI) in RAM\" --class arch --class gnu-linux --class gnu --class os --id 'archlinux-ram' {
    set gfxpayload=keep
    linux /arch/boot/x86_64/vmlinuz-linux archisobasedir=arch archisodevice=UUID=\${ARCHISO_UUID} copytoram=y cow_spacesize=2G
    initrd /arch/boot/intel-ucode.img /arch/boot/amd-ucode.img /arch/boot/x86_64/initramfs-linux.img
}
" >> ${MNT}/boot/grub/grub.cfg

cp ${DATA_PREFIX}/archlive_memtest86.efi ${MNT}/EFI/memtest86.efi
#echo 'title Memtest86
#linux EFI/memtest86.efi
#' > ${MNT}/loader/entries/98-memtest86.conf
echo "menuentry \"Custom Memtest86\" {
insmod chain
search --no-floppy --set=root --label ARCHISO_ATX
chainloader /EFI/memtest86.efi
}" >> ${MNT}/boot/grub/grub.cfg

cp ${DATA_PREFIX}/archlive_memtest86_plus.efi ${MNT}/EFI/memtest86_plus.efi
#echo 'title Memtest86+
#linux EFI/memtest86_plus.efi
#' > ${MNT}/loader/entries/99-memtest86-plus.conf
echo "menuentry \"Custom Memtest86+\" {
insmod chain
search --no-floppy --set=root --label ARCHISO_ATX
chainloader /EFI/memtest86_plus.efi
}" >> ${MNT}/boot/grub/grub.cfg

sed -i 's/default=archlinux/default=archlinux-ram/g' ${MNT}/boot/grub/grub.cfg

cp ${DATA_PREFIX}/archlive_freedos.img ${MNT}/arch/boot/freedos.img
echo '
LABEL freedos
MENU LABEL FreeDOS
LINUX boot/syslinux/memdisk
APPEND initrd=boot/freedos.img floppy
' > ${MNT}/boot/syslinux/archiso_tail.cfg_
cat ${MNT}/boot/syslinux/archiso_tail.cfg >> ${MNT}/boot/syslinux/archiso_tail.cfg_
mv ${MNT}/boot/syslinux/archiso_tail.cfg_ ${MNT}/boot/syslinux/archiso_tail.cfg

umount $MNT

rmdir $MNT
rm -rf $DIR
